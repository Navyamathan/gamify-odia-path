import React, { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'en' | 'hi' | 'or' | 'ta';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

// Translations
const translations = {
  en: {
    // Landing page
    'app.title': 'Brain Buddy',
    'app.subtitle': 'Your AI learning companion for grades 6-12',
    'landing.ready': 'Ready to start your learning journey?',
    'landing.getStarted': 'Get Started',
    'landing.learn': 'Learn',
    'landing.achieve': 'Achieve',
    'landing.excel': 'Excel',
    
    // Onboarding
    'onboarding.welcome': 'Welcome! ЁЯСЛ',
    'onboarding.setup': "Let's get you set up",
    'onboarding.fullName': 'Full Name',
    'onboarding.fullName.placeholder': 'Enter your name',
    'onboarding.email': 'Email',
    'onboarding.email.placeholder': 'your.email@example.com',
    'onboarding.continueWith': 'Or continue with:',
    'onboarding.phone': 'Phone',
    'onboarding.google': 'Google',
    'onboarding.next': 'Next',
    'onboarding.back': 'Back',
    
    // Academic Info
    'academic.title': 'Academic Info ЁЯОУ',
    'academic.subtitle': 'Help us personalize your experience',
    'academic.grade': 'Grade Level',
    'academic.grade.placeholder': 'Select your grade',
    'academic.school': 'School Name',
    'academic.school.placeholder': 'Enter your school name',
    
    // Language Preference
    'language.title': 'Language Preference ЁЯМН',
    'language.subtitle': 'Choose your learning language',
    'language.english': 'English',
    'language.hindi': 'Hindi',
    'language.odia': 'Odia',
    'language.tamil': 'Tamil',
    'language.complete': 'Complete Setup',
    
    // Dashboard
    'dashboard.greeting': 'Hi, {name}! ЁЯСЛ',
    'dashboard.ready': 'Ready to learn something new?',
    'dashboard.streak': 'Streak',
    'dashboard.stars': 'Stars',
    'dashboard.coins': 'Coins',
    'dashboard.level': 'Level',
    'dashboard.progress': 'Level Progress',
    'dashboard.subjects': 'Choose Subject',
    'dashboard.math': 'Math',
    'dashboard.science': 'Science',
    'dashboard.technology': 'Technology',
    'dashboard.engineering': 'Engineering',
  },
  hi: {
    // Landing page
    'app.title': 'рдмреНрд░реЗрди рдмрдбреА',
    'app.subtitle': 'рдХрдХреНрд╖рд╛ 6-12 рдХреЗ рд▓рд┐рдП рдЖрдкрдХрд╛ AI рд╢рд┐рдХреНрд╖рд╛ рд╕рд╛рдереА',
    'landing.ready': 'рдЕрдкрдиреА рд╢рд┐рдХреНрд╖рд╛ рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ?',
    'landing.getStarted': 'рд╢реБрд░реВ рдХрд░реЗрдВ',
    'landing.learn': 'рд╕реАрдЦреЗрдВ',
    'landing.achieve': 'рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ',
    'landing.excel': 'рдЙрддреНрдХреГрд╖реНрдЯрддрд╛',
    
    // Onboarding
    'onboarding.welcome': 'рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯСЛ',
    'onboarding.setup': 'рдЖрдЗрдП рдЖрдкрдХреЛ рд╕реЗрдЯ рдЕрдк рдХрд░рддреЗ рд╣реИрдВ',
    'onboarding.fullName': 'рдкреВрд░рд╛ рдирд╛рдо',
    'onboarding.fullName.placeholder': 'рдЕрдкрдирд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ',
    'onboarding.email': 'рдИрдореЗрд▓',
    'onboarding.email.placeholder': 'your.email@example.com',
    'onboarding.continueWith': 'рдпрд╛ рдЗрд╕рдХреЗ рд╕рд╛рде рдЬрд╛рд░реА рд░рдЦреЗрдВ:',
    'onboarding.phone': 'рдлреЛрди',
    'onboarding.google': 'рдЧреВрдЧрд▓',
    'onboarding.next': 'рдЕрдЧрд▓рд╛',
    'onboarding.back': 'рдкреАрдЫреЗ',
    
    // Academic Info
    'academic.title': 'рд╢реИрдХреНрд╖рдгрд┐рдХ рдЬрд╛рдирдХрд╛рд░реА ЁЯОУ',
    'academic.subtitle': 'рдЕрдкрдиреЗ рдЕрдиреБрднрд╡ рдХреЛ рд╡реНрдпрдХреНрддрд┐рдЧрдд рдмрдирд╛рдиреЗ рдореЗрдВ рд╣рдорд╛рд░реА рд╕рд╣рд╛рдпрддрд╛ рдХрд░реЗрдВ',
    'academic.grade': 'рдХрдХреНрд╖рд╛ рд╕реНрддрд░',
    'academic.grade.placeholder': 'рдЕрдкрдиреА рдХрдХреНрд╖рд╛ рдЪреБрдиреЗрдВ',
    'academic.school': 'рд╕реНрдХреВрд▓ рдХрд╛ рдирд╛рдо',
    'academic.school.placeholder': 'рдЕрдкрдиреЗ рд╕реНрдХреВрд▓ рдХрд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ',
    
    // Language Preference
    'language.title': 'рднрд╛рд╖рд╛ рдкреНрд░рд╛рдердорд┐рдХрддрд╛ ЁЯМН',
    'language.subtitle': 'рдЕрдкрдиреА рд╢рд┐рдХреНрд╖рд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    'language.english': 'рдЕрдВрдЧреНрд░реЗрдЬреА',
    'language.hindi': 'рд╣рд┐рдВрджреА',
    'language.odia': 'рдЙрдбрд╝рд┐рдпрд╛',
    'language.tamil': 'рддрдорд┐рд▓',
    'language.complete': 'рд╕реЗрдЯрдЕрдк рдкреВрд░рд╛ рдХрд░реЗрдВ',
    
    // Dashboard
    'dashboard.greeting': 'рдирдорд╕реНрддреЗ, {name}! ЁЯСЛ',
    'dashboard.ready': 'рдХреБрдЫ рдирдпрд╛ рд╕реАрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ?',
    'dashboard.streak': 'рд╕реНрдЯреНрд░реАрдХ',
    'dashboard.stars': 'рд╕рд┐рддрд╛рд░реЗ',
    'dashboard.coins': 'рд╕рд┐рдХреНрдХреЗ',
    'dashboard.level': 'рд╕реНрддрд░',
    'dashboard.progress': 'рд╕реНрддрд░ рдкреНрд░рдЧрддрд┐',
    'dashboard.subjects': 'рд╡рд┐рд╖рдп рдЪреБрдиреЗрдВ',
    'dashboard.math': 'рдЧрдгрд┐рдд',
    'dashboard.science': 'рд╡рд┐рдЬреНрдЮрд╛рди',
    'dashboard.technology': 'рддрдХрдиреАрдХ',
    'dashboard.engineering': 'рдЗрдВрдЬреАрдирд┐рдпрд░рд┐рдВрдЧ',
  },
  or: {
    // Landing page (Odia)
    'app.title': 'рммрнНрм░рнЗрми рммрмбрм┐',
    'app.subtitle': 'рмХрмХрнНрм╖рм╛ рнм-рнзрни рмкрм╛рмЗрмБ рмЖрмкрмгрмЩрнНрмХрм░ AI рм╢рм┐рмХрнНрм╖рм╛ рм╕рм╛рмернА',
    'landing.ready': 'рмЖрмкрмгрмЩрнНрмХрм░ рм╢рм┐рмХрнНрм╖рм╛ рмпрм╛рмдрнНрм░рм╛ рмЖрм░рморнНрмн рмХрм░рм┐рммрм╛рмХрнБ рмкрнНрм░рм╕рнНрмдрнБрмд?',
    'landing.getStarted': 'рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ',
    'landing.learn': 'рм╢рм┐рмЦрмирнНрмдрнБ',
    'landing.achieve': 'рм╕рмлрм│рмдрм╛',
    'landing.excel': 'рмЙрмдрнНрмХрм░рнНрм╖рмдрм╛',
    
    // Onboarding
    'onboarding.welcome': 'рм╕рнНрн▒рм╛рмЧрмд! ЁЯСЛ',
    'onboarding.setup': 'рмЖрм╕рмирнНрмдрнБ рмЖрмкрмгрмЩрнНрмХрнБ рм╕рнЗрмЯрнН рмЕрмкрнН рмХрм░рм┐рммрм╛',
    'onboarding.fullName': 'рмкрнВрм░рнНрмгрнНрмг рмирм╛рмо',
    'onboarding.fullName.placeholder': 'рмЖрмкрмгрмЩрнНрмХрм░ рмирм╛рмо рм▓рнЗрмЦрмирнНрмдрнБ',
    'onboarding.email': 'рмЗрморнЗрм▓',
    'onboarding.email.placeholder': 'your.email@example.com',
    'onboarding.continueWith': 'рмХрм┐рморнНрммрм╛ рмПрм╣рм╛ рм╕рм╣рм┐рмд рмЪрм╛рм▓рнБ рм░рмЦрмирнНрмдрнБ:',
    'onboarding.phone': 'рмлрнЛрми',
    'onboarding.google': 'рмЧрнБрмЧрм▓',
    'onboarding.next': 'рмкрм░рммрм░рнНрмдрнНрмдрнА',
    'onboarding.back': 'рмкрмЫрмХрнБ',
    
    // Academic Info
    'academic.title': 'рм╢рм┐рмХрнНрм╖рм╛рмЧрмд рмдрмернНрнЯ ЁЯОУ',
    'academic.subtitle': 'рмЖрмкрмгрмЩрнНрмХрм░ рмЕрмнрм┐рмЬрнНрмЮрмдрм╛рмХрнБ рммрнНрнЯрмХрнНрмдрм┐рмЧрмд рмХрм░рм┐рммрм╛рм░рнЗ рм╕рм╛рм╣рм╛рмпрнНрнЯ рмХрм░рмирнНрмдрнБ',
    'academic.grade': 'рмХрмХрнНрм╖рм╛ рм╕рнНрмдрм░',
    'academic.grade.placeholder': 'рмЖрмкрмгрмЩрнНрмХрм░ рмХрмХрнНрм╖рм╛ рммрм╛рмЫрмирнНрмдрнБ',
    'academic.school': 'рммрм┐рмжрнНрнЯрм╛рм│рнЯрм░ рмирм╛рмо',
    'academic.school.placeholder': 'рмЖрмкрмгрмЩрнНрмХрм░ рммрм┐рмжрнНрнЯрм╛рм│рнЯрм░ рмирм╛рмо рм▓рнЗрмЦрмирнНрмдрнБ',
    
    // Language Preference
    'language.title': 'рмнрм╛рм╖рм╛ рмкрм╕рмирнНрмж ЁЯМН',
    'language.subtitle': 'рмЖрмкрмгрмЩрнНрмХрм░ рм╢рм┐рмХрнНрм╖рм╛ рмнрм╛рм╖рм╛ рммрм╛рмЫрмирнНрмдрнБ',
    'language.english': 'рмЗрмВрм░рм╛рмЬрнА',
    'language.hindi': 'рм╣рм┐рмирнНрмжрнА',
    'language.odia': 'рмУрмбрм╝рм┐рмЖ',
    'language.tamil': 'рмдрм╛рморм┐рм▓',
    'language.complete': 'рм╕рнЗрмЯрмЕрмкрнН рм╕рморнНрмкрнВрм░рнНрмгрнНрмг рмХрм░рмирнНрмдрнБ',
    
    // Dashboard
    'dashboard.greeting': 'рмирморм╕рнНрмХрм╛рм░, {name}! ЁЯСЛ',
    'dashboard.ready': 'рмХрм┐рмЫрм┐ рмирнВрмЖ рм╢рм┐рмЦрм┐рммрм╛рмХрнБ рмкрнНрм░рм╕рнНрмдрнБрмд?',
    'dashboard.streak': 'рмзрм╛рм░рм╛',
    'dashboard.stars': 'рмдрм╛рм░рмХрм╛',
    'dashboard.coins': 'рморнБрмжрнНрм░рм╛',
    'dashboard.level': 'рм╕рнНрмдрм░',
    'dashboard.progress': 'рм╕рнНрмдрм░ рмкрнНрм░рмЧрмдрм┐',
    'dashboard.subjects': 'рммрм┐рм╖рнЯ рммрм╛рмЫрмирнНрмдрнБ',
    'dashboard.math': 'рмЧрмгрм┐рмд',
    'dashboard.science': 'рммрм┐рмЬрнНрмЮрм╛рми',
    'dashboard.technology': 'рмкрнНрм░рмпрнБрмХрнНрмдрм┐рммрм┐рмжрнНрнЯрм╛',
    'dashboard.engineering': 'рмЗрмЮрнНрмЬрм┐рмирм┐рнЯрм░рм┐рмВ',
  },
  ta: {
    // Landing page (Tamil)
    'app.title': 'рокро┐ро░рпИройрпН рокрпЖроЯро┐',
    'app.subtitle': 'ро╡роХрпБрокрпНрокрпБ 6-12роХрпНроХро╛рой роЙроЩрпНроХро│рпН AI роХро▒рпНро▒ро▓рпН родрпБрогрпИ',
    'landing.ready': 'роЙроЩрпНроХро│рпН роХро▒рпНро▒ро▓рпН рокропрогродрпНродрпИродрпН родрпКроЯроЩрпНроХ родропро╛ро░ро╛?',
    'landing.getStarted': 'родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН',
    'landing.learn': 'роХро▒рпНро▒ро▓рпН',
    'landing.achieve': 'роЪро╛родройрпИ',
    'landing.excel': 'роЪро┐ро▒рокрпНрокрпБ',
    
    // Onboarding
    'onboarding.welcome': 'ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН! ЁЯСЛ',
    'onboarding.setup': 'роЙроЩрпНроХро│рпИ роЕроорпИроХрпНроХ роЕройрпБроородро┐роХрпНроХро╡рпБроорпН',
    'onboarding.fullName': 'роорпБро┤рпБ рокрпЖропро░рпН',
    'onboarding.fullName.placeholder': 'роЙроЩрпНроХро│рпН рокрпЖропро░рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН',
    'onboarding.email': 'рооро┐ройрпНройроЮрпНроЪро▓рпН',
    'onboarding.email.placeholder': 'your.email@example.com',
    'onboarding.continueWith': 'роЕро▓рпНро▓родрпБ роЗродройрпН роорпВро▓роорпН родрпКроЯро░ро╡рпБроорпН:',
    'onboarding.phone': 'родрпКро▓рпИрокрпЗроЪро┐',
    'onboarding.google': 'роХрпВроХро▓рпН',
    'onboarding.next': 'роЕроЯрпБродрпНрод',
    'onboarding.back': 'рокро┐ройрпН',
    
    // Academic Info
    'academic.title': 'роХро▓рпНро╡ро┐ родроХро╡ро▓рпН ЁЯОУ',
    'academic.subtitle': 'роЙроЩрпНроХро│рпН роЕройрпБрокро╡родрпНродрпИ родройро┐рокрпНрокропройро╛роХрпНроХ роОроЩрпНроХро│рпБроХрпНроХрпБ роЙродро╡ро╡рпБроорпН',
    'academic.grade': 'ро╡роХрпБрокрпНрокрпБ роиро┐ро▓рпИ',
    'academic.grade.placeholder': 'роЙроЩрпНроХро│рпН ро╡роХрпБрокрпНрокрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    'academic.school': 'рокро│рпНро│ро┐ропро┐ройрпН рокрпЖропро░рпН',
    'academic.school.placeholder': 'роЙроЩрпНроХро│рпН рокро│рпНро│ро┐ропро┐ройрпН рокрпЖропро░рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН',
    
    // Language Preference
    'language.title': 'роорпКро┤ро┐ ро╡ро┐ро░рпБрокрпНрокроорпН ЁЯМН',
    'language.subtitle': 'роЙроЩрпНроХро│рпН роХро▒рпНро▒ро▓рпН роорпКро┤ро┐ропрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    'language.english': 'роЖроЩрпНроХро┐ро▓роорпН',
    'language.hindi': 'роЗроирпНродро┐',
    'language.odia': 'роТроЯро┐ропро╛',
    'language.tamil': 'родрооро┐ро┤рпН',
    'language.complete': 'роЕроорпИро╡рпИ роорпБро┤рпБроорпИропро╛роХрпНроХро╡рпБроорпН',
    
    // Dashboard
    'dashboard.greeting': 'ро╡рогроХрпНроХроорпН, {name}! ЁЯСЛ',
    'dashboard.ready': 'рокрпБродро┐родро╛роХ роПродро╛ро╡родрпБ роХро▒рпНроХ родропро╛ро░ро╛?',
    'dashboard.streak': 'родрпКроЯро░рпНроЪрпНроЪро┐',
    'dashboard.stars': 'роироЯрпНроЪродрпНродро┐ро░роЩрпНроХро│рпН',
    'dashboard.coins': 'роиро╛рогропроЩрпНроХро│рпН',
    'dashboard.level': 'роиро┐ро▓рпИ',
    'dashboard.progress': 'роиро┐ро▓рпИ роорпБройрпНройрпЗро▒рпНро▒роорпН',
    'dashboard.subjects': 'рокро╛роЯродрпНродрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    'dashboard.math': 'роХрогро┐родроорпН',
    'dashboard.science': 'роЕро▒ро┐ро╡ро┐ропро▓рпН',
    'dashboard.technology': 'родрпКро┤ро┐ро▓рпНроирпБроЯрпНрокроорпН',
    'dashboard.engineering': 'рокрпКро▒ро┐ропро┐ропро▓рпН',
  },
};

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('en');

  const t = (key: string, params?: Record<string, string>): string => {
    let translation = translations[language][key as keyof typeof translations['en']] || key;
    
    // Replace parameters in translation
    if (params) {
      Object.entries(params).forEach(([param, value]) => {
        translation = translation.replace(`{${param}}`, value);
      });
    }
    
    return translation;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};